{"version":3,"sources":["components/Cell.js","actions/grid.js","actions/types.js","components/Box.js","components/Grid.js","components/SudokuMain.js","reducers/grid.js","reducers/index.js","store.js","App.js","index.js"],"names":["connect","state","grid","setInput","x","y","value","dispatch","type","payload","setHighlight","disabled","input","result","highlighted","maxLength","className","onClick","onChange","e","target","parseInt","Box","props","Grid","clearGrid","solveSudoku","data","a","config","headers","axios","post","res","setGrid","initialState","combineReducers","action","map","innerArray","index","innerRow","indexRow","cell","indexColumn","box_x","Math","floor","box_y","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","SudokuMain","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.debeaac0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Cell.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { setInput, setHighlight } from \"../actions/grid\";\r\n\r\nconst Cell = ({\r\n  setInput,\r\n  setHighlight,\r\n  x,\r\n  y,\r\n  disabled,\r\n  grid: { input, result, highlighted },\r\n  type,\r\n}) => {\r\n  return (\r\n    <>\r\n      {type === \"result\" ? (\r\n        <input\r\n          disabled={true}\r\n          maxLength={1}\r\n          value={result[x][y] !== 0 ? result[x][y] : \"\"}\r\n          className=\"cell\"\r\n        />\r\n      ) : (\r\n        <input\r\n          disabled={disabled}\r\n          maxLength={1}\r\n          onClick={() => {\r\n            setHighlight(x, y);\r\n          }}\r\n          value={input[x][y] !== 0 ? input[x][y] : \"\"}\r\n          className={highlighted[x][y] ? \"cell-highlighted\" : \"cell\"}\r\n          onChange={(e) => {\r\n            if (e.target.value) {\r\n              setInput(x, y, parseInt(e.target.value));\r\n            } else {\r\n              setInput(x, y, parseInt(0));\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nCell.propTypes = {\r\n  grid: PropTypes.object.isRequired,\r\n  setInput: PropTypes.func.isRequired,\r\n  setHighlight: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  grid: state.grid,\r\n});\r\nexport default connect(mapStateToProps, { setInput, setHighlight })(Cell);\r\n","import { CLEAR, SET_INPUT, SOLVE_SUDOKU, HIGHLIGHT_CELL } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const clearGrid = () => (dispatch) => {\r\n  dispatch({ type: CLEAR });\r\n};\r\n\r\nexport const solveSudoku = (data) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const res = await axios.post(\"/solve\", data, config);\r\n  dispatch({ type: SOLVE_SUDOKU, payload: res.data });\r\n};\r\n\r\nexport const setInput = (x, y, value) => (dispatch) => {\r\n  dispatch({ type: SET_INPUT, payload: { x, y, value } });\r\n};\r\n\r\nexport const setHighlight = (x, y) => (dispatch) => {\r\n  dispatch({ type: HIGHLIGHT_CELL, payload: { x, y } });\r\n};\r\n","export const CLEAR = \"CLEAR\";\r\nexport const SET_INPUT = \"SET_INPUT\";\r\nexport const SOLVE_SUDOKU = \"SOLVE_SUDOKU\";\r\nexport const HIGHLIGHT_CELL = \"HIGHLIGHT_CELL\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Cell from \"../components/Cell\";\r\nimport \"./Box.css\";\r\n\r\nconst Box = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        <div className=\"grid-row\">\r\n          <Cell x={props.x} y={props.y} type={props.type} />\r\n          <Cell x={props.x} y={1 + props.y} type={props.type} />\r\n          <Cell x={props.x} y={2 + props.y} type={props.type} />\r\n        </div>\r\n        <div className=\"grid-row\">\r\n          <Cell x={1 + props.x} y={props.y} type={props.type} />\r\n          <Cell\r\n            x={1 + props.x}\r\n            y={1 + props.y}\r\n            type={props.type}\r\n          />\r\n          <Cell\r\n            x={1 + props.x}\r\n            y={2 + props.y}\r\n            type={props.type}\r\n          />\r\n        </div>\r\n        <div className=\"grid-row\">\r\n          <Cell x={2 + props.x} y={props.y} type={props.type} />\r\n          <Cell\r\n            x={2 + props.x}\r\n            y={1 + props.y}\r\n            type={props.type}\r\n          />\r\n          <Cell\r\n            x={2 + props.x}\r\n            y={2 + props.y}\r\n            type={props.type}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nBox.propTypes = {};\r\n\r\nexport default Box;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"./Box\";\r\nimport \"./Grid.css\";\r\n\r\nconst Grid = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"sudoku\">\r\n        <div className=\"sudoku-row\">\r\n          <div className=\"sudoku-box\">\r\n            <Box x={0} y={0} type={props.type} />\r\n          </div>\r\n          <div className=\"sudoku-box\">\r\n            <Box x={0} y={3} type={props.type} />\r\n          </div>\r\n          <div className=\"sudoku-box\">\r\n            <Box x={0} y={6} type={props.type} />\r\n          </div>\r\n        </div>\r\n        <div className=\"sudoku-row\">\r\n          <div className=\"sudoku-box\">\r\n            <Box x={3} y={0} type={props.type} />\r\n          </div>\r\n          <div className=\"sudoku-box\">\r\n            <Box x={3} y={3} type={props.type} />\r\n          </div>\r\n          <div className=\"sudoku-box\">\r\n            <Box x={3} y={6} type={props.type} />\r\n          </div>\r\n        </div>\r\n        <div className=\"sudoku-row\">\r\n          <div className=\"sudoku-box\">\r\n            <Box x={6} y={0} type={props.type} />\r\n          </div>\r\n          <div className=\"sudoku-box\">\r\n            <Box x={6} y={3} type={props.type} />\r\n          </div>\r\n          <div className=\"sudoku-box\">\r\n            <Box x={6} y={6} type={props.type} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearGrid, solveSudoku } from \"../actions/grid\";\r\nimport Grid from \"./Grid\";\r\nimport \"./Grid.css\";\r\n\r\nconst data = {\r\n  input: [\r\n    [0, 0, 0, 1, 0, 5, 0, 6, 8],\r\n    [0, 0, 0, 0, 0, 0, 7, 0, 1],\r\n    [9, 0, 1, 0, 0, 0, 0, 3, 0],\r\n    [0, 0, 7, 0, 2, 6, 0, 0, 0],\r\n    [5, 0, 0, 0, 0, 0, 0, 0, 3],\r\n    [0, 0, 0, 8, 7, 0, 4, 0, 0],\r\n    [0, 3, 0, 0, 0, 0, 8, 0, 5],\r\n    [1, 0, 5, 0, 0, 0, 0, 0, 0],\r\n    [7, 9, 0, 4, 0, 1, 0, 0, 0],\r\n  ],\r\n};\r\n\r\nconst Main = ({ setGrid, clearGrid, solveSudoku, grid: { input } }) => {\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <h3>Sudoku</h3>\r\n        <button className=\"btn btn-primary\" onClick={() => clearGrid()}>\r\n          Clear\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            solveSudoku(input);\r\n          }}\r\n        >\r\n          Solve\r\n        </button>\r\n        <div className=\"solver-board-container\">\r\n          <div className=\"solver-board\">\r\n            <Grid type=\"input\"></Grid>\r\n          </div>\r\n          <div className=\"solver-board\">\r\n            <Grid type=\"result\"></Grid>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  clearGrid: PropTypes.func.isRequired,\r\n  solveSudoku: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  grid: state.grid,\r\n});\r\nexport default connect(mapStateToProps, { clearGrid, solveSudoku })(Main);\r\n","import {\r\n  CLEAR,\r\n  SET_INPUT,\r\n  SOLVE_SUDOKU,\r\n  HIGHLIGHT_CELL,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  input: [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ],\r\n  result: [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ],\r\n  highlighted: [\r\n    [false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false],\r\n    [false, false, false, false, false, false, false, false, false],\r\n  ],\r\n};\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CLEAR:\r\n      return {\r\n        input: initialState.input,\r\n        result: initialState.result,\r\n        highlighted: initialState.highlighted,\r\n      };\r\n    case SET_INPUT:\r\n      return {\r\n        ...state,\r\n        input: state.input.map((innerArray, index) => {\r\n          if (index === payload.x) {\r\n            return innerArray.map((value, index) => {\r\n              if (index === payload.y) {\r\n                return payload.value;\r\n              } else {\r\n                return value;\r\n              }\r\n            });\r\n          } else {\r\n            return innerArray;\r\n          }\r\n        }),\r\n      };\r\n    case SOLVE_SUDOKU:\r\n      return { ...state, result: payload };\r\n\r\n    case HIGHLIGHT_CELL:\r\n      return {\r\n        ...state,\r\n        highlighted: initialState.highlighted.map((innerRow, indexRow) => {\r\n          if (indexRow === payload.x) {\r\n            return [true, true, true, true, true, true, true, true, true];\r\n          } else {\r\n            return innerRow.map((cell, indexColumn) => {\r\n              const box_x = Math.floor(payload.x / 3);\r\n              const box_y = Math.floor(payload.y / 3);\r\n\r\n              if (indexColumn === payload.y) {\r\n                return true;\r\n              } else if (\r\n                (indexRow === box_x * 3 ||\r\n                  indexRow === box_x * 3 + 1 ||\r\n                  indexRow === box_x * 3 + 2) &&\r\n                (indexColumn === box_y * 3 ||\r\n                  indexColumn === box_y * 3 + 1 ||\r\n                  indexColumn === box_y * 3 + 2)\r\n              ) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n        }),\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport grid from \"../reducers/grid\";\r\n\r\nexport default combineReducers({ grid });\r\n","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport SudokuMain from \"./components/SudokuMain\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <SudokuMain></SudokuMain>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}